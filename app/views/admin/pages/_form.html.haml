- content_for :head do
  = include_javascripts :image_picker, :edit_page
  = include_stylesheets :editable_elements, :fancybox

- if can?(:manage, @page)

  = f.foldable_inputs :name => :information do

    = f.input :title, :wrapper_html => { :class => 'highlighted' }

    - if not @page.index? and not @page.not_found?
      = f.input :parent_id, :as => :select, :collection => parent_pages_options, :include_blank => false

    = f.input :slug, :required => false, :hint => @page.slug.blank? ? '&nbsp;' : page_url(@page), :input_html => { :'data-url' => get_path_admin_pages_url, :disabled => @page.index? || @page.not_found? }, :wrapper_html => { :style => "#{'display: none' if @page.templatized?};" }

= render 'editable_elements', :page => @page

= f.foldable_inputs :name => :seo do

  = f.input :seo_title
  = f.input :meta_keywords
  = f.input :meta_description

- if can?(:manage, @page)

  = f.foldable_inputs :name => :advanced_options, :id => 'advanced-options' do

    = f.input :content_type_id, :as => :select, :collection => current_site.content_types.all.to_a, :include_blank => false, :wrapper_html => { :style => "#{'display: none' unless @page.templatized?}" }

    = f.custom_input :templatized, :css => 'toggle', :style => "#{'display: none' if @page.redirect?}" do
      = f.check_box :templatized

    = f.custom_input :published, :css => 'toggle' do
      = f.check_box :published

    = f.custom_input :listed, :css => 'toggle' do
      = f.check_box :listed

    = f.custom_input :redirect, :css => 'toggle', :style => "#{'display: none' if @page.templatized?}" do
      = f.check_box :redirect

    = f.input :cache_strategy, :as => :select, :collection => options_for_page_cache_strategy, :include_blank => false, :wrapper_html => { :style => "#{'display: none' if @page.redirect?}" }

    = f.input :redirect_url, :required => true, :wrapper_html => { :style => "#{'display: none' unless @page.redirect?}" }


  = f.foldable_inputs :name => :raw_template do
    = f.custom_input :value, :css => 'code full', :with_label => false do
      = f.label :raw_template
      %code{ :class => 'html' }
        = f.text_area :raw_template
      = f.errors_on :template
      .more
        = link_to t('admin.image_picker.link'), admin_theme_assets_path, :id => 'image-picker-link', :class => 'picture'