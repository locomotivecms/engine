- content_for :head do
  = include_javascripts :site

= f.foldable_inputs :name => :information, :style => "#{'display: none' unless @site.new_record?}" do
  = f.input :name, :required => false

= f.foldable_inputs :name => :seo do
  = f.input :seo_title
  = f.input :meta_keywords
  = f.input :meta_description

- if can?(:point, Site)
  - if manage_subdomain_or_domains?
    = f.foldable_inputs :name => :access_points, :class => 'editable-list off' do

      = f.custom_input :subdomain, :css => 'path' do
        %em
          http://
        = f.text_field :subdomain, :readonly => !manage_subdomain?
        \.
        %em
          = application_domain

      - if manage_domains?
        - @site.domains_without_subdomain.each_with_index do |name, index|
          %li{ :class => "item added #{'last' if index == @site.domains.size - 1}"}
            %em
              http://
            = text_field_tag 'site[domains][]', name, :class => 'string label void domain'
            &nbsp;
            = error_on_domain(@site, name)
            %span.actions
              = link_to image_tag('admin/form/icons/trash.png'), '#', :class => 'remove first', :confirm => t('admin.messages.confirm')

        %li.item.template
          %em
            http://
          = text_field_tag 'label', t('formtastic.hints.site.domain_name'), :class => 'string label void domain'
          &nbsp;
          %span.actions
            = link_to image_tag('admin/form/icons/trash.png'), '#', :class => 'remove first', :confirm => t('admin.messages.confirm')
            %button{ :class => 'button light add', :type => 'button' }
              %span!= t('admin.buttons.new_item')

- if can?(:manage, Membership)

  = f.foldable_inputs :name => :memberships, :class => 'memberships off' do
    = f.semantic_fields_for :memberships do |fm|

      - membership, account = fm.object, fm.object.account

      %li.item.membership{ :'data-role' => membership.role }
        %strong= account.name

        %em.email= account.email

        - if current_admin != account
          .role
            %em.editable= t("admin.memberships.roles.#{membership.role}")

            = fm.select :role, Ability::ROLES.collect { |r| [t("admin.memberships.roles.#{r}"), r] }, :include_blank => false

          %span.actions
            = link_to image_tag('admin/form/icons/trash.png'), admin_membership_url(membership), :class => 'remove first', :confirm =>t('admin.messages.confirm'), :method => :delete

        - else
          .role
            %em.locked= t("admin.memberships.roles.#{membership.role}")
