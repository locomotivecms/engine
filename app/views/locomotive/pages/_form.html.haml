- content_for :head do
  = render '/locomotive/content_assets/picker'
  = render '/locomotive/theme_assets/picker'
  = render 'editable_elements'

- content_for :backbone_view_data do
  :plain
    page: #{@page.to_presenter.as_json_for_html_view.to_json}

- if can?(:manage, @page)

  = f.inputs :name => :information do

    = f.input :title, :wrapper_html => { :class => 'highlighted' }

    - if not @page.index? and not @page.not_found?
      = f.input :parent_id, :as => :select, :collection => parent_pages_options, :include_blank => false

    = f.input :slug, :required => false, :hint => @page.slug.blank? ? t('.empty_slug') : public_page_url(@page), :input_html => { :'data-url' => get_path_pages_url, :disabled => @page.index? || @page.not_found? }, :wrapper_html => { :style => "#{'display: none' if @page.templatized? && !@page.templatized_from_parent?};", :class => 'em-inline-hints' }

= f.inputs :name => :seo, :class => "inputs foldable #{'folded' if inputs_folded?(@page)}" do

  = f.input :seo_title

  = f.input :meta_keywords

  = f.input :meta_description

- if can?(:manage, @page)

  = f.inputs :name => :advanced_options, :id => 'advanced-options', :class => "inputs foldable #{'folded' if inputs_folded?(@page)}" do

    = f.input :handle

    = f.input :response_type, :as => :select, :collection => options_for_page_response_type, :include_blank => false

    = f.input :templatized, :as => :'Locomotive::Toggle', :style => "#{'display: none' if @page.redirect? || @page.templatized_from_parent?}"

    = f.input :target_klass_name, :as => :select, :collection => options_for_target_klass_name, :include_blank => false, :wrapper_html => { :style => "#{'display: none' unless @page.templatized? && !@page.templatized_from_parent?}" }

    = f.input :published, :as => :'Locomotive::Toggle'

    = f.input :listed, :as => :'Locomotive::Toggle'

    = f.input :redirect, :as => :'Locomotive::Toggle', :wrapper_html => { :style => "#{'display: none' if @page.templatized? || !@page.default_response_type?}" }

    = f.input :cache_strategy, :as => :select, :collection => options_for_page_cache_strategy, :include_blank => false, :wrapper_html => { :style => "#{'display: none' if @page.redirect?}" }

    = f.input :redirect_url, :required => true, :wrapper_html => { :style => "#{'display: none' unless @page.redirect?}" }

  = f.inputs :name => :raw_template, :class => "inputs foldable #{'folded' if inputs_folded?(@page)}" do

    = f.input :raw_template, :as => :'Locomotive::Code'