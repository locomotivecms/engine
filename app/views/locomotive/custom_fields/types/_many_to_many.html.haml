- if field.ui_enabled?
  - target_content_type = Locomotive::ContentType.class_name_to_content_type(field.class_name, current_site)

  = f.input       name.to_sym,
    label:        custom_field_label(field),
    hint:         field.hint,
    as:           :'Locomotive::Empty',
    wrapper_html: { id: "content_entry_#{name}_input", class: ['empty relationship input', translatable_status(field)].compact.join(' ') }

  - content_for :head do

    %script{ type: 'text/html', id: "#{name}_list" }

      %p.empty{ style: 'display: none' }!= t('.empty')

      %ul

      %hr

      .new-entry

        = select_tag 'entry', []

        %span.actions
          = link_to t('locomotive.buttons.new_item'), '#', class: 'add'

    %script{ type: 'text/html', id: "#{name}_entry" }
      %li
        .handle.col
          %i.icon-reorder

        .label.col
          {{label}}

        %span.actions
          = link_to_icon :trash, '#', class: 'remove', data: { confirm: t('locomotive.messages.confirm') }

  - content_for :backbone_view_data do
    :plain
      , all_#{name}_entries: #{escape_json target_content_type.list_or_group_entries.to_json(depth: 1).html_safe}