- content_for :head do
  = render '/locomotive/theme_assets/picker'

- content_for :backbone_view_data do
  :plain
    theme_asset: #{j @theme_asset.persisted? ? @theme_asset.to_json.html_safe : 'null'}

= f.hidden_field :performing_plain_text

#file-selector{ :class => "selector #{'hidden' if display_plain_text?(@theme_asset)}" }
  = f.inputs :name => :information do
    = f.input :source

  - if allow_plain_text_editing?(@theme_asset)
    = link_to t('locomotive.theme_assets.form.choose_plain_text'), '#', :class => 'alt'

- if allow_plain_text_editing?(@theme_asset)
  #text-selector{ :class => "selector #{'hidden' unless display_plain_text?(@theme_asset)}", :style => "#{'display: none' unless display_plain_text?(@theme_asset)}" }
    = f.inputs :name => :code, :class => 'inputs code' do

      - if @theme_asset.new_record?
        = f.input :plain_text_name

        = f.input :plain_text_type, :as => 'select', :collection => %w(stylesheet javascript scss coffeescript), :include_blank => false

      = f.input :plain_text, :as => :'Locomotive::Code', :type => plain_text_type(@theme_asset)

    = link_to t('locomotive.theme_assets.form.choose_file'), '#', :class => 'alt'

= f.inputs :name => :options, :class => "inputs foldable #{'folded' if inputs_folded?(@theme_asset)}" do
  = f.input :folder
  = f.input :compile, :as => :'Locomotive::Toggle'
